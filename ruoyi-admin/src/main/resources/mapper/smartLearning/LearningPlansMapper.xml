<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.smartLearning.mapper.LearningPlansMapper">

    <resultMap type="LearningPlans" id="LearningPlansResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="title"    column="title"    />
        <result property="description"    column="description"    />
        <result property="startDate"    column="start_date"    />
        <result property="endDate"    column="end_date"    />
        <result property="createdAt"    column="created_at"    />
        <result property="updatedAt"    column="updated_at"    />
    </resultMap>

    <sql id="selectLearningPlansVo">
        select id, user_id, title, description, start_date, end_date, created_at, updated_at from learning_plans
    </sql>

    <select id="selectLearningPlansList" parameterType="LearningPlans" resultMap="LearningPlansResult">
        <include refid="selectLearningPlansVo"/>
        <where>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="title != null  and title != ''"> and title like concat('%', #{title}, '%')</if>
            <if test="description != null  and description != ''"> and description = #{description}</if>
            <if test="startDate != null "> and start_date = #{startDate}</if>
            <if test="endDate != null "> and end_date = #{endDate}</if>
            <if test="createdAt != null "> and created_at = #{createdAt}</if>
            <if test="updatedAt != null "> and updated_at = #{updatedAt}</if>
        </where>
    </select>

    <select id="selectLearningPlansById" parameterType="Long" resultMap="LearningPlansResult">
        <include refid="selectLearningPlansVo"/>
        where id = #{id}
    </select>

    <select id="selectLearningPlansByDate" parameterType="map" resultMap="LearningPlansResult">
        <include refid="selectLearningPlansVo"/>
        WHERE user_id=#{userId} AND #{currentDate} BETWEEN start_date AND end_date
    </select>

    <insert id="insertLearningPlans" parameterType="LearningPlans" useGeneratedKeys="true" keyProperty="id">
        insert into learning_plans
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="title != null and title != ''">title,</if>
            <if test="description != null">description,</if>
            <if test="startDate != null">start_date,</if>
            <if test="endDate != null">end_date,</if>
            <if test="createdAt != null">created_at,</if>
            <if test="updatedAt != null">updated_at,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="title != null and title != ''">#{title},</if>
            <if test="description != null">#{description},</if>
            <if test="startDate != null">#{startDate},</if>
            <if test="endDate != null">#{endDate},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="updatedAt != null">#{updatedAt},</if>
         </trim>
    </insert>

    <update id="updateLearningPlans" parameterType="LearningPlans">
        update learning_plans
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="title != null and title != ''">title = #{title},</if>
            <if test="description != null">description = #{description},</if>
            <if test="startDate != null">start_date = #{startDate},</if>
            <if test="endDate != null">end_date = #{endDate},</if>
            <if test="createdAt != null">created_at = #{createdAt},</if>
            <if test="updatedAt != null">updated_at = #{updatedAt},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteLearningPlansById" parameterType="Long">
        delete from learning_plans where id = #{id}
    </delete>

    <delete id="deleteLearningPlansByIds" parameterType="String">
        delete from learning_plans where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>
